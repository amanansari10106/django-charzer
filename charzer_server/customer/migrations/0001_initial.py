# Generated by Django 3.1.2 on 2021-06-11 10:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Ads',
            fields=[
                ('add_id', models.AutoField(primary_key=True, serialize=False)),
                ('ad_description', models.CharField(blank=True, max_length=500, null=True)),
                ('ad_frequency', models.IntegerField(default=0)),
                ('ad_type', models.CharField(choices=[('Banner', 'Banner'), ('Promotional', 'Promotional')], default='Promotional', max_length=50)),
                ('ad_logo', models.ImageField(blank=True, null=True, upload_to='Images/banner')),
            ],
        ),
        migrations.CreateModel(
            name='Aminities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Aminitie', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='AppInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PrivacyPolicy', models.TextField(default='', max_length=5000)),
                ('TermsCondition', models.TextField(default='', max_length=5000)),
                ('AppCreditValue', models.FloatField(default=1.0)),
                ('AppCurrency', models.CharField(choices=[('USD', 'USD'), ('INR', 'INR'), ('EUR', 'EUR'), ('JPY', 'JPY'), ('GBP', 'GBP'), ('AUD', 'AUD'), ('CAD', 'CAD'), ('CHF', 'CHF')], default='USD', max_length=10)),
                ('Service_tax', models.FloatField(default=1.0)),
                ('ContactUs', models.TextField(default='', max_length=5000)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('app_id', models.AutoField(primary_key=True, serialize=False)),
                ('app_date_time', models.DateTimeField(blank=True, null=True)),
                ('app_create_date', models.DateField(auto_now_add=True)),
                ('app_create_time', models.TimeField(auto_now_add=True)),
                ('app_amt', models.FloatField(default=0.0)),
                ('app_duration', models.FloatField(max_length=100)),
                ('app_status', models.CharField(choices=[('Completed', 'Completed'), ('Upcoming', 'Upcoming'), ('Cancelled', 'Cancelled'), ('Pending', 'Pending')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Charger',
            fields=[
                ('charger_id', models.AutoField(primary_key=True, serialize=False)),
                ('charger_name', models.CharField(max_length=100)),
                ('charger_longitude', models.FloatField()),
                ('charger_latitude', models.FloatField()),
                ('charger_online', models.BooleanField(default='False')),
                ('charger_address', models.CharField(default='', max_length=500)),
                ('charger_rating', models.FloatField(default=0.0)),
                ('charger_open', models.TimeField(blank=True, null=True)),
                ('charger_close', models.TimeField(blank=True, null=True)),
                ('charger_brand_logo', models.ImageField(default='Images/defaultCharger.png', upload_to='Images/Host/charger_photos')),
                ('power_available', models.CharField(default='', max_length=100)),
                ('Other_details', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('coupon_id', models.AutoField(primary_key=True, serialize=False)),
                ('coupon_code', models.CharField(default='', max_length=50)),
                ('coupon_type', models.CharField(choices=[('Percentage', 'Percentage'), ('Amount', 'Amount')], max_length=50, null=True)),
                ('coupon_amt', models.FloatField(default=0.0)),
                ('coupon_amt_limit', models.FloatField(default=0.0)),
                ('customer_list', models.CharField(blank=True, default=0, max_length=1000000, null=True)),
                ('usage_limit', models.IntegerField(default=0)),
                ('customer_limit', models.IntegerField(default=0)),
                ('open_choice', models.CharField(choices=[('All', 'All'), ('Nobody', 'Nobody'), ('selected_customer_type_only', 'Selected customer type only')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CreditType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_name', models.CharField(default='', max_length=100)),
                ('credit_amt', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_name', models.CharField(default='User Name', max_length=100)),
                ('customer_email', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Not a valid email', regex='^[a-z0-9]+[\\._]?[a-z0-9]+[@]\\w+[.]\\w{2,3}$')])),
                ('customer_phone', models.CharField(default='', max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format +919999999999. Up to 10 digits allowed.', regex='^\\+?1?\\d{9,10}$')], verbose_name='Phone')),
                ('customer_image', models.ImageField(default='Images/defaultProfile.png', upload_to='Images/customer/customer_profile')),
                ('customer_address', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('customer_credits', models.FloatField(default=0, max_length=200)),
                ('customer_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer_referal', models.CharField(default='', max_length=100, unique=True)),
                ('subscription_start', models.DateTimeField(blank=True, null=True)),
                ('subscription_end', models.DateTimeField(blank=True, null=True)),
                ('customer_token', models.CharField(default='**', max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Question', models.TextField(default='', max_length=5000)),
                ('Answer', models.TextField(default='', max_length=5000)),
                ('Date_time', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('host_id', models.AutoField(primary_key=True, serialize=False)),
                ('host_name', models.CharField(default='Host', max_length=100)),
                ('host_email', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message='Not a valid email', regex='^[a-z0-9]+[\\._]?[a-z0-9]+[@]\\w+[.]\\w{2,3}$')])),
                ('host_phone', models.CharField(default='', max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format +919999999999. Up to 10 digits allowed.', regex='^\\+?1?\\d{9,10}$')], verbose_name='Phone')),
                ('host_image', models.ImageField(default='Images/defaultProfile.png', upload_to='Images/Host/host_profile')),
                ('host_address', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('host_credit', models.IntegerField(default=0)),
                ('host_active', models.BooleanField(default=True)),
                ('host_referal', models.CharField(default='', max_length=100, unique=True)),
                ('host_sponsor', models.CharField(default='Unknown', max_length=100)),
                ('host_token', models.CharField(default='**', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneOTP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format +919999999999. Up to 14 digits allowed.', regex='^\\+?1?\\d{9,10}$')])),
                ('otp', models.CharField(blank=True, max_length=9, null=True)),
                ('count', models.IntegerField(default=0, help_text='Number of otp_sent')),
                ('validated', models.BooleanField(default=False, help_text='If it is true, that means user have validate otp correctly in second API')),
                ('otp_session_id', models.CharField(default='', max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocketType',
            fields=[
                ('socket_id', models.AutoField(primary_key=True, serialize=False)),
                ('socket_name', models.CharField(default='', max_length=100)),
                ('socket_power', models.IntegerField(default=0)),
                ('socket_image', models.ImageField(default='Images/defaultSocket.png', upload_to='Images/Host/socket_photos')),
            ],
        ),
        migrations.CreateModel(
            name='SubAdmin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subadmin_email', models.CharField(max_length=100)),
                ('subadmin_active', models.FloatField()),
                ('subadmin', models.OneToOneField(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionType',
            fields=[
                ('s_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('s_type', models.CharField(max_length=100)),
                ('s_title', models.CharField(max_length=100)),
                ('s_description', models.CharField(max_length=100)),
                ('s_price', models.IntegerField(default=0)),
                ('s_discount_price', models.IntegerField(default=0)),
                ('s_percentage', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('vehicle_id', models.AutoField(primary_key=True, serialize=False)),
                ('vehicle_image', models.ImageField(default='Images/vehicle-placeholder.png', upload_to='Images/customer/vehicle')),
                ('vehicle_manufacture', models.CharField(default='', max_length=100)),
                ('vehicle_model', models.CharField(default='', max_length=100)),
                ('vehicle_type', models.CharField(max_length=100)),
                ('is_favourite', models.BooleanField(default=True)),
                ('vehicle_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.customers')),
            ],
        ),
        migrations.CreateModel(
            name='SubAdminAccess',
            fields=[
                ('access_id', models.AutoField(primary_key=True, serialize=False)),
                ('edit_user', models.BooleanField(default=False)),
                ('edit_host', models.BooleanField(default=False)),
                ('edit_billdetails', models.BooleanField(default=False)),
                ('edit_pumpdetails', models.BooleanField(default=False)),
                ('edit_appointments', models.BooleanField(default=False)),
                ('access_subadmin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.subadmin')),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charger_photo', models.ImageField(default='Images/defaultCharger.png', upload_to='Images/Host/charger_photos')),
                ('Charger_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.charger')),
            ],
        ),
        migrations.CreateModel(
            name='Nearby',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nearby_type', models.CharField(max_length=100)),
                ('nearby_name', models.CharField(max_length=100)),
                ('nearby_latitude', models.FloatField(default=0.0)),
                ('nearby_longitude', models.FloatField(default=0.0)),
                ('nearby_image', models.ImageField(default='Images/defaultCharger.png', upload_to='Images/Host/charger_photos')),
                ('address', models.CharField(max_length=250)),
                ('charger_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.charger')),
            ],
        ),
        migrations.CreateModel(
            name='FavouriteCharger',
            fields=[
                ('favourite_ID', models.AutoField(primary_key=True, serialize=False)),
                ('favourite_charger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.charger')),
                ('favourite_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.customers')),
            ],
        ),
        migrations.AddField(
            model_name='customers',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.subscriptiontype'),
        ),
        migrations.CreateModel(
            name='CustomerNotification',
            fields=[
                ('N_id', models.AutoField(primary_key=True, serialize=False)),
                ('N_Title', models.CharField(default='', max_length=500)),
                ('N_Description', models.CharField(default='', max_length=500)),
                ('N_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('N_status', models.BooleanField(default=True)),
                ('N_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.customers')),
            ],
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('credit_id', models.AutoField(primary_key=True, serialize=False)),
                ('credit_status', models.BooleanField(default=True)),
                ('credit_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.customers')),
                ('credit_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.credittype')),
            ],
        ),
        migrations.CreateModel(
            name='ChargerSocket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hour_price', models.FloatField(default=0.0)),
                ('KWh_price', models.FloatField(default=0.0)),
                ('charger_capacity', models.IntegerField()),
                ('Socket_availabile', models.IntegerField(default=0)),
                ('charger_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.charger')),
                ('socket_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.sockettype')),
            ],
        ),
        migrations.CreateModel(
            name='ChargerRating',
            fields=[
                ('rating_id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.IntegerField(default=0)),
                ('rating_charger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.charger')),
                ('rating_customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.customers')),
            ],
        ),
        migrations.AddField(
            model_name='charger',
            name='charger_host',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.host'),
        ),
        migrations.CreateModel(
            name='Bill_Details',
            fields=[
                ('bill_id', models.AutoField(primary_key=True, serialize=False)),
                ('bill_date', models.DateField(auto_now_add=True)),
                ('bill_time', models.TimeField(auto_now_add=True)),
                ('bill_amount', models.FloatField(max_length=100)),
                ('razerpay_payment_id', models.CharField(default='', max_length=100)),
                ('razerpay_order_id', models.CharField(default='', max_length=100)),
                ('razerpay_signature', models.CharField(default='', max_length=100)),
                ('bill_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.appointment')),
                ('bill_host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.host')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.coupon')),
            ],
        ),
        migrations.AddField(
            model_name='appointment',
            name='app_charger',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.charger'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='app_customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customer.customers'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='app_socket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='customer.chargersocket'),
        ),
    ]
